<class>
<keyword> class </keyword>
<identifier> Bat CAT=CLASS USED=false </identifier>
<symbol> { </symbol>
<classVarDec>
<keyword> field </keyword>
<keyword> int </keyword>
<identifier> x CAT=FIELD USED=false </identifier>
<symbol> , </symbol>
<identifier> y CAT=FIELD USED=false </identifier>
<symbol> ; </symbol>
</classVarDec>
<classVarDec>
<keyword> field </keyword>
<keyword> int </keyword>
<identifier> width CAT=FIELD USED=false </identifier>
<symbol> , </symbol>
<identifier> height CAT=FIELD USED=false </identifier>
<symbol> ; </symbol>
</classVarDec>
<classVarDec>
<keyword> field </keyword>
<keyword> int </keyword>
<identifier> direction CAT=FIELD USED=false </identifier>
<symbol> ; </symbol>
</classVarDec>
<subroutineDec>
<keyword> constructor </keyword>
<identifier> Bat CAT=TYPE USED=true </identifier>
<identifier> new CAT=SUB USED=false </identifier>
<symbol> ( </symbol>
<parameterList>
<keyword> int </keyword>
<identifier> Ax CAT=ARG USED=false </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> Ay </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> Awidth CAT=ARG USED=false </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> Aheight </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> x </identifier>
<symbol> = </symbol>
<identifier> Ax </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> y CAT=ARG USED=false </identifier>
<symbol> = </symbol>
<identifier> Ay CAT=ARG USED=false </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> width </identifier>
<symbol> = </symbol>
<identifier> Awidth </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> height CAT=ARG USED=false </identifier>
<symbol> = </symbol>
<identifier> Aheight CAT=ARG USED=false </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> direction </identifier>
<symbol> = </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> show CAT=ARG USED=false </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<keyword> this </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier> dispose CAT=ARG USED=false </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> deAlloc </identifier>
<symbol> ( </symbol>
<keyword> this </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier> show </identifier>
<symbol> ( </symbol>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier> Screen CAT=SUB USED=true </identifier>
<symbol> . </symbol>
<identifier> setColor CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> true </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier> draw CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier> hide CAT=SUB USED=false </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier> Screen CAT=SUB USED=true </identifier>
<symbol> . </symbol>
<identifier> setColor CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> false </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier> draw CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier> draw CAT=SUB USED=false </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier> Screen CAT=SUB USED=true </identifier>
<symbol> . </symbol>
<identifier> drawRectangle CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> y CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier> width CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> y CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier> height CAT=VAR USED=true </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier> setDirection CAT=SUB USED=false </identifier>
<symbol> ( </symbol>
<parameterList>
<keyword> int </keyword>
<identifier> Adirection CAT=ARG USED=false </identifier>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<letStatement>
<keyword> let </keyword>
<identifier> direction CAT=VAR USED=true </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier> Adirection CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> int </keyword>
<identifier> getLeft CAT=SUB USED=false </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<returnStatement>
<keyword> return </keyword>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> int </keyword>
<identifier> getRight CAT=SUB USED=false </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<returnStatement>
<keyword> return </keyword>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier> width CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier> setWidth CAT=SUB USED=false </identifier>
<symbol> ( </symbol>
<parameterList>
<keyword> int </keyword>
<identifier> Awidth CAT=ARG USED=false </identifier>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier> hide CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<letStatement>
<keyword> let </keyword>
<identifier> width CAT=VAR USED=true </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier> Awidth CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<doStatement>
<keyword> do </keyword>
<identifier> show CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier> move CAT=SUB USED=false </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<ifStatement>
<keyword> if </keyword>
<symbol> ( </symbol>
<expression>
<term>
<identifier> direction CAT=VAR USED=true </identifier>
</term>
<symbol> = </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
<symbol> ) </symbol>
<symbol> { </symbol>
<statements>
<letStatement>
<keyword> let </keyword>
<identifier> x CAT=VAR USED=true </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
<symbol> - </symbol>
<term>
<integerConstant> 4 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<ifStatement>
<keyword> if </keyword>
<symbol> ( </symbol>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
<symbol> &lt; </symbol>
<term>
<integerConstant> 0 </integerConstant>
</term>
</expression>
<symbol> ) </symbol>
<symbol> { </symbol>
<statements>
<letStatement>
<keyword> let </keyword>
<identifier> x CAT=VAR USED=true </identifier>
<symbol> = </symbol>
<expression>
<term>
<integerConstant> 0 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
</statements>
<symbol> } </symbol>
</ifStatement>
<doStatement>
<keyword> do </keyword>
<identifier> Screen CAT=SUB USED=true </identifier>
<symbol> . </symbol>
<identifier> setColor CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> false </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier> Screen CAT=SUB USED=true </identifier>
<symbol> . </symbol>
<identifier> drawRectangle CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier> width CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> y CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier> width CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 4 </integerConstant>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> y CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier> height CAT=VAR USED=true </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier> Screen CAT=SUB USED=true </identifier>
<symbol> . </symbol>
<identifier> setColor CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> true </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier> Screen CAT=SUB USED=true </identifier>
<symbol> . </symbol>
<identifier> drawRectangle CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> y CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 3 </integerConstant>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> y CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier> height CAT=VAR USED=true </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
</statements>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<statements>
<letStatement>
<keyword> let </keyword>
<identifier> x CAT=VAR USED=true </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 4 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<ifStatement>
<keyword> if </keyword>
<symbol> ( </symbol>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier> width CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> &gt; </symbol>
<term>
<integerConstant> 511 </integerConstant>
</term>
</expression>
<symbol> ) </symbol>
<symbol> { </symbol>
<statements>
<letStatement>
<keyword> let </keyword>
<identifier> x CAT=VAR USED=true </identifier>
<symbol> = </symbol>
<expression>
<term>
<integerConstant> 511 </integerConstant>
</term>
<symbol> - </symbol>
<term>
<identifier> width CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
</statements>
<symbol> } </symbol>
</ifStatement>
<doStatement>
<keyword> do </keyword>
<identifier> Screen CAT=SUB USED=true </identifier>
<symbol> . </symbol>
<identifier> setColor CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> false </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier> Screen CAT=SUB USED=true </identifier>
<symbol> . </symbol>
<identifier> drawRectangle CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
<symbol> - </symbol>
<term>
<integerConstant> 4 </integerConstant>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> y CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
<symbol> - </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> y CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier> height CAT=VAR USED=true </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier> Screen CAT=SUB USED=true </identifier>
<symbol> . </symbol>
<identifier> setColor CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> true </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier> Screen CAT=SUB USED=true </identifier>
<symbol> . </symbol>
<identifier> drawRectangle CAT=SUB USED=true </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier> width CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> - </symbol>
<term>
<integerConstant> 3 </integerConstant>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> y CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> x CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier> width CAT=VAR USED=true </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier> y CAT=VAR USED=true </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier> height CAT=VAR USED=true </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
</statements>
<symbol> } </symbol>
</ifStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<symbol> } </symbol>
</class>
