<tokens>
<keyword> class </keyword>
<keyword> Main </keyword>
<keyword> { </keyword>
<keyword> function </keyword>
<keyword> void </keyword>
<keyword> main </keyword>
<keyword> ( </keyword>
<keyword> ) </keyword>
<keyword> { </keyword>
<keyword> var </keyword>
<keyword> Array </keyword>
<keyword> a </keyword>
<keyword> ; </keyword>
<keyword> var </keyword>
<keyword> int </keyword>
<keyword> length </keyword>
<keyword> ; </keyword>
<keyword> var </keyword>
<keyword> int </keyword>
<keyword> i </keyword>
<keyword> , </keyword>
<keyword> sum </keyword>
<keyword> ; </keyword>
<keyword> let </keyword>
<keyword> length </keyword>
<keyword> = </keyword>
<keyword> Keyboard </keyword>
<keyword> . </keyword>
<keyword> readInt </keyword>
<keyword> ( </keyword>
<keyword> HOW MANY NUMBERS?  </keyword>
<keyword> ) </keyword>
<keyword> ; </keyword>
<keyword> let </keyword>
<keyword> a </keyword>
<keyword> = </keyword>
<keyword> Array </keyword>
<keyword> . </keyword>
<keyword> new </keyword>
<keyword> ( </keyword>
<keyword> length </keyword>
<keyword> ) </keyword>
<keyword> ; </keyword>
<keyword> let </keyword>
<keyword> i </keyword>
<keyword> = </keyword>
<keyword> 0 </keyword>
<keyword> ; </keyword>
<keyword> while </keyword>
<keyword> ( </keyword>
<keyword> i </keyword>
<keyword> < </keyword>
<keyword> length </keyword>
<keyword> ) </keyword>
<keyword> { </keyword>
<keyword> let </keyword>
<keyword> a </keyword>
<keyword> [ </keyword>
<keyword> i </keyword>
<keyword> ] </keyword>
<keyword> = </keyword>
<keyword> Keyboard </keyword>
<keyword> . </keyword>
<keyword> readInt </keyword>
<keyword> ( </keyword>
<keyword> ENTER THE NEXT NUMBER:  </keyword>
<keyword> ) </keyword>
<keyword> ; </keyword>
<keyword> let </keyword>
<keyword> i </keyword>
<keyword> = </keyword>
<keyword> i </keyword>
<keyword> + </keyword>
<keyword> 1 </keyword>
<keyword> ; </keyword>
<keyword> } </keyword>
<keyword> let </keyword>
<keyword> i </keyword>
<keyword> = </keyword>
<keyword> 0 </keyword>
<keyword> ; </keyword>
<keyword> let </keyword>
<keyword> sum </keyword>
<keyword> = </keyword>
<keyword> 0 </keyword>
<keyword> ; </keyword>
<keyword> while </keyword>
<keyword> ( </keyword>
<keyword> i </keyword>
<keyword> < </keyword>
<keyword> length </keyword>
<keyword> ) </keyword>
<keyword> { </keyword>
<keyword> let </keyword>
<keyword> sum </keyword>
<keyword> = </keyword>
<keyword> sum </keyword>
<keyword> + </keyword>
<keyword> a </keyword>
<keyword> [ </keyword>
<keyword> i </keyword>
<keyword> ] </keyword>
<keyword> ; </keyword>
<keyword> let </keyword>
<keyword> i </keyword>
<keyword> = </keyword>
<keyword> i </keyword>
<keyword> + </keyword>
<keyword> 1 </keyword>
<keyword> ; </keyword>
<keyword> } </keyword>
<keyword> do </keyword>
<keyword> Output </keyword>
<keyword> . </keyword>
<keyword> printString </keyword>
<keyword> ( </keyword>
<keyword> THE AVERAGE IS:  </keyword>
<keyword> ) </keyword>
<keyword> ; </keyword>
<keyword> do </keyword>
<keyword> Output </keyword>
<keyword> . </keyword>
<keyword> printInt </keyword>
<keyword> ( </keyword>
<keyword> sum </keyword>
<keyword> / </keyword>
<keyword> length </keyword>
<keyword> ) </keyword>
<keyword> ; </keyword>
<keyword> do </keyword>
<keyword> Output </keyword>
<keyword> . </keyword>
<keyword> println </keyword>
<keyword> ( </keyword>
<keyword> ) </keyword>
<keyword> ; </keyword>
<keyword> return </keyword>
<keyword> ; </keyword>
<keyword> } </keyword>
</tokens>
