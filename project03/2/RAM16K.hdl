// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/2/RAM16K.hdl

/**
 * Memory of 16K registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM16K[address(t)](t)
 *     Write: If load(t-1) then RAM16K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */


CHIP RAM16K {

    IN  in[16], load, address[14];
    OUT out[16];

    PARTS:
    //if load=1
    DMux4Way(in=load, sel=address[12..13], a=a1, b=b1, c=c1, d=d1);
    RAM4K(in=in, load=a1, address=address[0..11], out=at);
    RAM4K(in=in, load=b1, address=address[0..11], out=bt);
    RAM4K(in=in, load=c1, address=address[0..11], out=ct);
    RAM4K(in=in, load=d1, address=address[0..11], out=dt);

    //if load=0
    Mux4Way16(a=at, b=bt, c=ct, d=dt, sel=address[12..13], out=out);
}
