// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/2/RAM512.hdl

/**
 * Memory of 512 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM512[address(t)](t)
 *     Write: If load(t-1) then RAM512[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM512 {

    IN  in[16], load, address[9];
    OUT out[16];

    PARTS:
    //if load=1
    DMux8Way(in=load, sel=address[6..8], a=a1, b=b1, c=c1, d=d1, e=e1, f=f1, g=g1, h=h1);
    RAM64(in=in, load=a1, address=address[0..5], out=at);
    RAM64(in=in, load=b1, address=address[0..5], out=bt);
    RAM64(in=in, load=c1, address=address[0..5], out=ct);
    RAM64(in=in, load=d1, address=address[0..5], out=dt);
    RAM64(in=in, load=e1, address=address[0..5], out=et);
    RAM64(in=in, load=f1, address=address[0..5], out=ft);
    RAM64(in=in, load=g1, address=address[0..5], out=gt);
    RAM64(in=in, load=h1, address=address[0..5], out=ht);

    //if load=0
    Mux8Way16(a=at, b=bt, c=ct, d=dt, e=et, f=ft, g=gt, h=ht, sel=address[6..8], out=out);
}
